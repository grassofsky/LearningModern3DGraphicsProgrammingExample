"=============================================================================
" File:         workplace/learningModern3DGraphicProgramming/_vimrc_local.vim {{{1
" Author:       zhongxiewei
" Version:      
let s:k_version = 7
" Created:      20th May 2017
" Last Update:  20th May 2017
"------------------------------------------------------------------------
" Description:
"       learn mordern 3d graphic programming exercise source code
"
"------------------------------------------------------------------------
" Installation:
"       The file must be present in a directory parent of every directories
"       where the definitions must apply.
" History:      0.0.1
" TODO:         
" }}}1
"=============================================================================

" ######################################################################
" Always loaded {{{1
" Here goes settings from plugins that are not project aware :(

" 2x:h -> remove file name -> move dir up from .config/
let s:script                = expand("<sfile>:p")
let s:script_dir            = expand('<sfile>:p:h:h')
let s:config_dir            = expand('<sfile>:p:h')
let s:currently_edited_file = expand('%:p')
" let lh#project.auto_detect = 0 " in the case of multi component projects


" ######################################################################
" Buffer-local Definitions {{{1
" Avoid local reinclusion {{{2
if &cp || (exists("b:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local")
      \ && (b:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local >= s:k_version)
      \ && !exists('g:force_reload_workplace_learningModern3DGraphicProgramming_vimrc_local'))
  finish
endif
let b:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local = s:k_version
let s:cpo_save=&cpo
set cpo&vim
" Avoid local reinclusion }}}2

" ======================[ Check for excluded files => abort {{{2
if empty(s:currently_edited_file)
  call assert_false('Invalid path!')
  let s:currently_edited_file = getcwd()
endif
" If this is a buffer generated by a plugin or a remote file, abort!
if s:currently_edited_file =~ '^{.*}://'
  call lh#log#this('Not a real source file, aborting')
  finish
endif

" If the project has component/modules, detect and set b:component_name here

" ======================[ Define the project {{{2
if get(g:, 'g:force_reload_workplace_learningModern3DGraphicProgramming_vimrc_local', 0)
  " Permit to set new project options if reloading is required
  call lh#let#unlet('b:'.lh#project#_get_varname())
elseif lh#project#is_in_a_project()
  " Abort if a project is already defined
  finish
endif
call lh#project#define(s:, {'name': 'LearningModern3DGraphicProgramming'})


" ######################################################################
" Global Definitions {{{1
" Avoid global reinclusion {{{2
if &cp || (exists("g:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local")
      \ && (g:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local >= s:k_version)
      \ && !exists('g:force_reload_workplace_learningModern3DGraphicProgramming_vimrc_local'))
  let &cpo=s:cpo_save
  finish
endif
let g:loaded_workplace_learningModern3DGraphicProgramming_vimrc_local = s:k_version
" Avoid global reinclusion }}}2
"------------------------------------------------------------------------

" ======================[ Misc function {{{2
" Function: s:Echo(expr) {{{3
function! s:Echo(expr)
  return a:expr
  " return eval(a:expr)
endfunction
"------------------------------------------------------------------------
" }}}1
"------------------------------------------------------------------------
let &cpo=s:cpo_save
"=============================================================================
" vim600: set fdm=marker:

let b:project_sources_dir = "/home/zhongxiewei/workplace/learningModern3DGraphicProgramming/"
